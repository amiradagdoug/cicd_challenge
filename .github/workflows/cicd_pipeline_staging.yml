name: Node.js CI/CD staging

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Build the docker image
        run: |
          docker build -t nodejs-image_ff .
          docker tag nodejs-image_ff ${{ secrets.DOCKER_USERNAME }}/nodejs-image_ff:${{ github.sha }}

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Generate test report
        run: npm run generate-test-report

      - name: Run Mocha with JUnit Reporter
        run: npx mocha --reporter mocha-junit-reporter > test-report.xml

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: test-report.xml

  staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Deploy to Staging
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-image_ff:${{ github.sha }}
          docker stop nodejs-image_ff || true
          docker rm nodejs-image_ff || true
          docker run -d -p 3008:3000 --name=nodejs-image_ff ${{ secrets.DOCKER_USERNAME }}/nodejs-image_ff:${{ github.sha }}
          docker ps

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Deploy to Production
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-image_ff:${{ github.sha }}
          docker stop nodejs-image_ff || true
          docker rm nodejs-image_ff || true
          docker run -d -p 3008:3000 --name=nodejs-image_ff ${{ secrets.DOCKER_USERNAME }}/nodejs-image_ff:${{ github.sha }}
          docker ps
